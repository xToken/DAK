This collection of plugins (and loader) make up what I started calling the DAK (Duck Admin Kit?)

With 221, this has changed somewhat.  This mod can be downloaded via SteamWorkshop, and will autodownload on all clients on connect.
The ModID for DAK is 5f4f178, with the current version being 1350026884
You will want to name the folder m5f4f178_1350026884

Since B220, server admin files are loaded all from the same directory - YAY - makes this alot easier.

A DAKConfig.json file will be automatically created in the config_path from the server command line, or in %AppData%\Natural Selection 2 if not specified.
The DAKSettings.json file will also be created here as necessary.

All mods can be enabled/disabled via the DAKconfig.json file.  A sample usable config file is generated by the mod, which uses the recommended values.
Generally the default configuration should work for most instances, if you do customize the messages be sure to maintain the same amount of regex strings (%s, %f, %d).
 
 Server Admin commands added:
 sv_rcon - allows an admin to execute a command on the servers console.
 sv_reloadconfig - reloads the DAKConfig.json file.
 sv_listplugins - displays all loaded plugins, their revisions and if they are enabled/disabled.
 sv_defaultconfig - will default the config for the plugin passed, or ALL.
 sv_reloadplugins - Will reload all plugins on the server.
 sv_maps - lists all maps currently available on the server
 sv_randomon - will turn on random teams
 sv_randomoff - will turn off random teams
 sv_tournamentmode - takes 3 possible parameters, 1/true, 0/false for tournamentmode, friendlyfire and official mode respectively.
	sv_tournamentmode 1 1 0 would enable tournamentmode and friendlyfire, put stay in PCW mode.  Official mode requires team captains to ready.
 sv_setcaptain - Can be used to set a captain for a team, is required for official mode.
 sv_forceroundstart - Used in tournamentmode to force the round start as an Admin.
 sv_cancelroundstart - Used in tournamentmode to cancel the round start as an Admin.
 sv_votemap - starts a mapvote at anytime
 sv_cancelmapvote - cancels any in progress map votes.
 sv_listadmins - will list all groups and admins configured in the ServerAdmin.json file
 sv_killserver - Does exactly what it says - This is not a clean closing of the server, it uses a bug which causes a crash.
 sv_hasreserve - Will grant this admin a reserve slot that does not expire.
 sv_surrendervote - Will start a surrender vote for the team provided.
 sv_cancelsurrendervote - Will cancel a in progress surrender vote for the team provided.
 sv_afkimmune - Can be granted to users to prevent them from being AFKkicked.

 All server admin commands will also print to any other admins consoles when used (admins that also have access to that command)
 
 General console commands added:
 timeleft - displays time left till next map vote.
 acceptmotd - supresses motd messages unless the kMOTDMessageRevision is changed.  This is saved in DAKSettings.json and persists between map changes.
 printmotd - will print the motd out.
 voterandom - will vote to enable random teams.
 ready - marks your team as ready if tournamentmode is enabled.
 vote - used to vote for a map during map vote, needs to have a number as a paramater.
 rtv or rockthevote - used to vote for a map vote (can be started anytime)
 surrender - used to start or vote in an active surrender vote.
 
 Breakdown of current 'Plugins' system and the standard 'Plugins'
 DAK extends various events from the engine, and creates a couple of its own.
 
 kDAKOnClientConnect
 kDAKOnClientDisconnect
 kDAKOnServerUpdate
 kDAKOnClientDelayedConnect
 kDAKOnTeamJoin
 kDAKOnGameEnd
 kDAKOnEntityKilled
 kDAKOnClientChatMessage
 kDAKOverrideMapChange
 
 Functions can be added to these variables which will be run when these events occur, sample shown below:
 table.insert(kDAKOnClientDisconnect, function(client) return LogOnClientDisconnect(client) end)
 
 All files in the plugin folder are loaded by DAK, with config_ files being loaded to setup config if needed, and plugin_ files containing the plugin logic
 The config_ files uses an array to track all config functions:
 table.insert(kDAKPluginDefaultConfigs, {PluginName = "AFKKicker", DefaultConfig = function() SetupDefaultConfig() end })
 
 Notes about Gamerules overrides - they require the same args from vanilla NS2, or will need manual configuration.
 This can be changed in DAKLoader.lua, kDAKBaseGamerules
 Below are the functions overriden and their default configuration.
 
	function NS2Gamerules:OnCreate()
	function NS2Gamerules:JoinTeam(player, newTeamNumber, force)
	function NS2Gamerules:EndGame(winningTeam)
	function NS2Gamerules:OnEntityKilled(targetEntity, attacker, doer, point, direction)
	function NS2Gamerules:UpdatePregame(timePassed)
	function NS2Gamerules:SetGameState(state)
	function NS2Gamerules:CastVoteByPlayer( voteTechId, player )
	
	Also included is a function to capture chat messages and raise events based on them, disabling the gamerules extensions
	will also disable this.

	function Server.AddChatToHistory(message, playerName, steamId, teamNumber, teamOnly)

 These can be disabled in DAKConfig.json, _GamerulesExtensions.
 
 Please note that errors caused in functions added are systemic, meaning they will affect the execution of NS2 gamecode, so some care must be taken.
 
 OverrideInterp Plugin
 - This is mainly for testing, however it overrides the default interpolation value of 100ms on each clients connect, making sure that
 the value is correct set client/server side.
 
 VoteRandom Plugin
 - This plugin enables players to vote to enable random teams, and supports either randoming the teams instantly, or enabling random teams for a set duration,
 where the next game and all games for a set duration have random teams.
 
 TournamentMode Plugin
 - Made a recent re-visit to this plugin to improve basics regarding it, created basic framework for PCW/Official modes.  May continue to improve
 and add to differences between modes.
 
 ReservedSlots Plugin
 - Basic Reserve slots plugin, however is more a proof of concept and does not have the ability to work in a way that provides a good user experience.
 Basic framework may prove useful should the ability arise to reject clients connection earlier or modify query response.
 
 MOTD Plugin
 - This plugin provides a MOTD system that could be more accurately described as a rules system, which allows clients to accept and have the messages
 not always appear on connect.  Should be loaded as last plugin so that other plugins can stop the messages if needed.  Messages are also sent in groups
 so that they can all be viewed onscreen.
 
 MapVote Plugin
 - This plugin provides a map voting system, which will read the mapcycle.txt for cycle time and the list of maps.  On round end a map vote is triggered
 if enough time has elapsed, with a randomly selected list of maps which excludes some of the map last played.  Since NS2 only has 4 offical maps currently
 the plugin will automatically add back in maps if there is not enough to make the minimum.  Almost all parts are configurable in the configs.
 
 AFKKicker Plugin
 - This plugin checks if a player is idle by caching their viewangles and origin, and displays messages to alert them if they are going to be kicked.
 May in the future be improved to use idle parameter on the player.
 
 EnhancedLogging Plugin
 - This plugin enables alot of extra logging, which is done to a seperate directory within the configured server admin path.
 Sample log file below with some information omitted:
 
 L 9/16/2012 - 12:55:53 - <AAA><10><STEAMID><0> joined team 2.
 L 9/16/2012 - 12:55:59 - <[Mi7] JumpinJackFlas><13><STEAMID><0> changed name to [Mi7] JumpinJackFlash.
 L 9/16/2012 - 12:56:01 - <[Mi7] JumpinJackFlas><13><STEAMID><0> connected, address IPADDRESS
 L 9/16/2012 - 12:56:06 - <FatherTime><6><STEAMID><2> killed <Sphen><4><STEAMID><1> with BiteLeap at (attacker_position 38.560000 3.970000 -2.400000) (victim_position 39.510000 2.750000 -4.130000)
 L 9/16/2012 - 12:56:20 - <FatherTime><6><STEAMID><2> killed <Siylenia><12><STEAMID><1> with BiteLeap at (attacker_position 62.810000 0.330000 19.350000) (victim_position 63.350000 -0.160000 20.500000)
 L 9/16/2012 - 12:56:47 - <Siylenia><12><STEAMID><1> killed <FatherTime><6><STEAMID><2> with Rifle at (attacker_position 81.250000 0.390000 30.740000) (victim_position 83.000000 1.180000 30.890000)
 L 9/16/2012 - 12:56:53 - <Siylenia><12><STEAMID><1> killed <AAA><10><STEAMID><2> with Rifle at (attacker_position 75.930000 -0.100000 35.140000) (victim_position 68.780000 4.880000 36.570000)
 L 9/16/2012 - 12:57:00 - <Teh_Prodigy><2><STEAMID><1> killed Hydra with Shotgun at (attacker_position 69.100000 0.010000 33.650000) (victim_position 64.600000 -0.000000 30.490000)
 
 VoteSurrender Plugin
 - This plugin provides a surrender vote system for each team, which can be used to vote for the game to end if a set percentage of the team votes.
 
 //Config
 
 Reserve Slot config

 -Name is just a friendly name for the user, is not checked in game.
 -ID is the steamID for the user, which is what is used to authenticate them in game.
 -Reason is the reason for why the user has a reserve slot
 -Time is the unix system time of when the reserve slot will expire, 0 will set it to not expire.

 Sample file below:

 {
 	{ "name": "dragon", "id": 5176141, "reason": "meh", "time": 0 }
 }
 
 ServerAdmin config
 
 This files works identically to the base admin system's configuration file.
 
 Sample file below:
 
 {
    "groups":
    {
        "admin_group": { "type": "disallowed", "commands": [ ] },
        "mod_group": { "type": "disallowed", "commands": [ "sv_ban", "sv_reset" ] },
        "clan_group": { "type": "allowed", "commands": [ "sv_kick", "sv_say" ] }
    }
    
    "users":
    {
        "dragon": { "id": 5176141, "groups": [ "clan_group" ] },
    }
}